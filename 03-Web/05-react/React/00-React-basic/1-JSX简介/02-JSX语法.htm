<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="../reactjs/react.js"></script>
    <script src="../reactjs/react-dom.js"></script>
    <script src="../reactjs/babel.js"></script>
    <title>JSX语法:创建列表</title>
  </head>
  <body>
    <div id="app"></div>
    <script type="text/babel">
      class App extends React.Component {
        constructor(props) {
          super(props);
          this.state = {
            movies: ['星际穿越', '大话西游', '盗梦空间', '少年派'],
          };
        }

        render() {
          const { movies } = this.state;
          return (
            <div>
              <h2>电影列表</h2>
              <ul>
                {/*为什么列表的子项要添加唯一的key: 虚拟DOM的渲染有关系*/}
                {movies.map((item, index) => {
                  return (
                    <li
                      key={item}
                      onClick={(event) => {
                        this.liClick(item, index, event);
                      }}
                    >
                      {item}
                    </li>
                  );
                })}
              </ul>
            </div>
          );
        }

        liClick(item, index, event) {
          console.log(item, index, event);
        }
      }

      ReactDOM.render(<App />, document.getElementById('app'));

      /*
       
      class App extends React.Component {
         render() {
            return React.createElement(
              "div", 
              {
              id: "app",
              name: "div"
              },
              React.createElement("p", {
              className: "text"
              }, "hello react!!"),
              React.createElement("p", {
              className: "babel"
              }, "hello babel"));
          }
      }
      
      */
    </script>
  </body>
</html>
