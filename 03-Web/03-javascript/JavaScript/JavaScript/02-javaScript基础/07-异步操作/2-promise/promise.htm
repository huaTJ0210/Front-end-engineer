<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <script>
      // (1) 创建一个函数,函数返回值为一个promise对象
      function func() {
        return new Promise((resolve, reject) => {
          console.log('1')
          setTimeout(() => {
            reject({ error: 'error message' })
          }, 2000)
          console.log('2')
        })
      }
     /*
       (2)调用func()获取返回的promise对象

       第一种情况：catch异常，当前p的状态为‘fulfilled’；在第（3）步中只需要实现then中的逻辑即可，
       但是如果不return数据，则在then中接收的res为undefined；

       第二种情况：不catch异常，当前p的状态为‘rejected’，需要在第（3）步catch异常，不然报错
     */ 
      var p = func()
        .then((res) => {
          return 'message'
        })
        .catch((error) => {
          console.log('3')
          console.log(error)
          return error
        })
      console.log('4')
      console.log(p)

      //(3) 获取p返回的结果
      p.then((res) => {
        console.log('===>:' + res.error)
      })
    </script>
  </head>
  <body></body>
</html>
